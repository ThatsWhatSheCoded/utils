#!/usr/bin/env bash

##
# pwdf
#
# Print absolute path to file argument and copy path to system clipboard.
##

readonly ARGS=( "$@" )
readonly PROGNAME=$(basename "${BASH_SOURCE[0]}")
readonly PROGDIR=$(realpath "$(dirname "${BASH_SOURCE[0]}")" )
readonly FILE=${1:-'.'}

usage() {
	local summary='Print absolute path to file and copy path to clipboard.'
	local args='[FILE] [-h] [-d]'
	local options=(
		"FILE: Filename. Optional. If no FILE (or invalid FILE), built-in \
		\`pwd\` is run."
		"-d: Enable debug mode. Warning: Extremely verbose."
		"-h: Print usage."
	)

	_usage "${summary}" "${PROGNAME}" "${args}" "${options[@]}"
	[[ -n $1 ]] && _err_exit "$@"
	exit -1
}

check_args() {
	local fileStr=${1:?$(_null_var "$FUNCNAME")}

	if [[ ${fileStr} == '.' ]] || [[ ! -f ${fileStr} ]]; then
		_print_warn "Running \`pwd\`!\n"
		path=$( pwd -P "${PROGDIR}" )
	else
		path=$( realpath "${fileStr}" )
	fi
}

main() {
	local path

	source "${PROGDIR}/common.sh"
	_install_dependencies
	_set_colors
	_parse_args "${ARGS[@]}"
	check_args "${FILE}"
	if [[ `uname -s` == "Darwin" ]]; then
		realpath "${path}" | perl -pe 'chomp if eof' | pbcopy 
	else
		realpath "${path}" | perl -pe 'chomp if eof' | xclip -selection clipboard
	fi
	_print_status "path: ${path}\n"
}
main
